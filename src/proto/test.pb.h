/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_PROTO_FILES_TEST_PB_H_INCLUDED
#define PB_PROTO_FILES_TEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _DeviceInfo
{
    char identification_type[32];
    char identification_value[32];
    char imei[32];
    char sw_version[32];
    char esp_sdk_ver[32];
    uint64_t mac_id;
    char chip_model[32];
    uint32_t chip_rev;
    uint32_t sketch_size;
    uint32_t sketch_free_size;
    char sketch_md5[64];
    char modem_name[32];
    char sim_ccid[32];
    char imsi[32];
    char net_operator[32];
    int32_t net_signal;
    char net_ip[32];
} DeviceInfo;

#ifdef __cplusplus
extern "C"
{
#endif

/* Initializer values for message structs */
#define DeviceInfo_init_default {"", "", "", "", "", 0, "", 0, 0, 0, "", "", "", "", "", 0, ""}
#define DeviceInfo_init_zero {"", "", "", "", "", 0, "", 0, 0, 0, "", "", "", "", "", 0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define DeviceInfo_identification_type_tag 1
#define DeviceInfo_identification_value_tag 2
#define DeviceInfo_imei_tag 3
#define DeviceInfo_sw_version_tag 4
#define DeviceInfo_esp_sdk_ver_tag 5
#define DeviceInfo_mac_id_tag 6
#define DeviceInfo_chip_model_tag 7
#define DeviceInfo_chip_rev_tag 8
#define DeviceInfo_sketch_size_tag 9
#define DeviceInfo_sketch_free_size_tag 10
#define DeviceInfo_sketch_md5_tag 11
#define DeviceInfo_modem_name_tag 12
#define DeviceInfo_sim_ccid_tag 13
#define DeviceInfo_imsi_tag 14
#define DeviceInfo_net_operator_tag 15
#define DeviceInfo_net_signal_tag 16
#define DeviceInfo_net_ip_tag 17

/* Struct field encoding specification for nanopb */
#define DeviceInfo_FIELDLIST(X, a)                          \
    X(a, STATIC, SINGULAR, STRING, identification_type, 1)  \
    X(a, STATIC, SINGULAR, STRING, identification_value, 2) \
    X(a, STATIC, SINGULAR, STRING, imei, 3)                 \
    X(a, STATIC, SINGULAR, STRING, sw_version, 4)           \
    X(a, STATIC, SINGULAR, STRING, esp_sdk_ver, 5)          \
    X(a, STATIC, SINGULAR, UINT64, mac_id, 6)               \
    X(a, STATIC, SINGULAR, STRING, chip_model, 7)           \
    X(a, STATIC, SINGULAR, UINT32, chip_rev, 8)             \
    X(a, STATIC, SINGULAR, UINT32, sketch_size, 9)          \
    X(a, STATIC, SINGULAR, UINT32, sketch_free_size, 10)    \
    X(a, STATIC, SINGULAR, STRING, sketch_md5, 11)          \
    X(a, STATIC, SINGULAR, STRING, modem_name, 12)          \
    X(a, STATIC, SINGULAR, STRING, sim_ccid, 13)            \
    X(a, STATIC, SINGULAR, STRING, imsi, 14)                \
    X(a, STATIC, SINGULAR, STRING, net_operator, 15)        \
    X(a, STATIC, SINGULAR, INT32, net_signal, 16)           \
    X(a, STATIC, SINGULAR, STRING, net_ip, 17)
#define DeviceInfo_CALLBACK NULL
#define DeviceInfo_DEFAULT NULL

    extern const pb_msgdesc_t DeviceInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DeviceInfo_fields &DeviceInfo_msg

/* Maximum encoded size of messages (where known) */
#define DeviceInfo_size 470
#define PROTO_FILES_TEST_PB_H_MAX_SIZE DeviceInfo_size

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
